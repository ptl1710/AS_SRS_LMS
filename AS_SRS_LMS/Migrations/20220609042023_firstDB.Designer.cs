// <auto-generated />
using System;
using AS_SRS_LMS.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AS_SRS_LMS.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220609042023_firstDB")]
    partial class firstDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AS_SRS_LMS.Models.Class", b =>
                {
                    b.Property<int>("classId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("classId"), 1L, 1);

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("className")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("endDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("startDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("subjectId")
                        .HasColumnType("int");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("classId");

                    b.HasIndex("subjectId");

                    b.ToTable("Class");
                });

            modelBuilder.Entity("AS_SRS_LMS.Models.Document", b =>
                {
                    b.Property<string>("documentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("subjectId")
                        .HasColumnType("int");

                    b.HasKey("documentId");

                    b.HasIndex("subjectId");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("AS_SRS_LMS.Models.Exam", b =>
                {
                    b.Property<string>("examId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<float>("Time")
                        .HasColumnType("real");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("examDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("examName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("subjectId")
                        .HasColumnType("int");

                    b.Property<int>("typeExamId")
                        .HasColumnType("int");

                    b.HasKey("examId");

                    b.HasIndex("subjectId")
                        .IsUnique();

                    b.HasIndex("typeExamId");

                    b.ToTable("Exams");
                });

            modelBuilder.Entity("AS_SRS_LMS.Models.Question", b =>
                {
                    b.Property<int>("questionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("questionId"), 1L, 1);

                    b.Property<string>("AnswerA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnswerB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnswerC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnswerD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("answerCorrect")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("questionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("subjectId")
                        .HasColumnType("int");

                    b.HasKey("questionId");

                    b.HasIndex("subjectId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("AS_SRS_LMS.Models.Result", b =>
                {
                    b.Property<int>("resultId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("resultId"), 1L, 1);

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.Property<DateTime>("examDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("examId")
                        .HasColumnType("int");

                    b.Property<string>("examId1")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.HasKey("resultId");

                    b.HasIndex("examId1");

                    b.HasIndex("userId");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("AS_SRS_LMS.Models.Role", b =>
                {
                    b.Property<int>("roleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("roleId"), 1L, 1);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("roleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("roleId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("AS_SRS_LMS.Models.Schedule", b =>
                {
                    b.Property<int>("scheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("scheduleId"), 1L, 1);

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<int>("dayOfWeek")
                        .HasColumnType("int");

                    b.Property<int>("subjectId")
                        .HasColumnType("int");

                    b.HasKey("scheduleId");

                    b.HasIndex("subjectId");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("AS_SRS_LMS.Models.Subject", b =>
                {
                    b.Property<int>("subjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("subjectId"), 1L, 1);

                    b.Property<int>("examId")
                        .HasColumnType("int");

                    b.Property<int>("numberOfPeriod")
                        .HasColumnType("int");

                    b.Property<string>("subjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("subjectId");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("AS_SRS_LMS.Models.TypeExam", b =>
                {
                    b.Property<int>("typeExamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("typeExamId"), 1L, 1);

                    b.Property<int>("typeName")
                        .HasColumnType("int");

                    b.HasKey("typeExamId");

                    b.ToTable("TypeExams");
                });

            modelBuilder.Entity("AS_SRS_LMS.Models.User", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResetTokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<string>("VerificationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VerifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("classId")
                        .HasColumnType("int");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("lastName")
                        .HasColumnType("int");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("roleId")
                        .HasColumnType("int");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userId");

                    b.HasIndex("classId");

                    b.HasIndex("roleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AS_SRS_LMS.Models.Class", b =>
                {
                    b.HasOne("AS_SRS_LMS.Models.Subject", null)
                        .WithMany("Class")
                        .HasForeignKey("subjectId");
                });

            modelBuilder.Entity("AS_SRS_LMS.Models.Document", b =>
                {
                    b.HasOne("AS_SRS_LMS.Models.Subject", "subject")
                        .WithMany("documents")
                        .HasForeignKey("subjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("subject");
                });

            modelBuilder.Entity("AS_SRS_LMS.Models.Exam", b =>
                {
                    b.HasOne("AS_SRS_LMS.Models.Subject", "subject")
                        .WithOne("Exam")
                        .HasForeignKey("AS_SRS_LMS.Models.Exam", "subjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AS_SRS_LMS.Models.TypeExam", "typeExam")
                        .WithMany("exam")
                        .HasForeignKey("typeExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("subject");

                    b.Navigation("typeExam");
                });

            modelBuilder.Entity("AS_SRS_LMS.Models.Question", b =>
                {
                    b.HasOne("AS_SRS_LMS.Models.Subject", "subject")
                        .WithMany("questions")
                        .HasForeignKey("subjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("subject");
                });

            modelBuilder.Entity("AS_SRS_LMS.Models.Result", b =>
                {
                    b.HasOne("AS_SRS_LMS.Models.Exam", "exam")
                        .WithMany()
                        .HasForeignKey("examId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AS_SRS_LMS.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("exam");

                    b.Navigation("user");
                });

            modelBuilder.Entity("AS_SRS_LMS.Models.Schedule", b =>
                {
                    b.HasOne("AS_SRS_LMS.Models.Subject", "subject")
                        .WithMany("schedules")
                        .HasForeignKey("subjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("subject");
                });

            modelBuilder.Entity("AS_SRS_LMS.Models.User", b =>
                {
                    b.HasOne("AS_SRS_LMS.Models.Class", null)
                        .WithMany("users")
                        .HasForeignKey("classId");

                    b.HasOne("AS_SRS_LMS.Models.Role", "role")
                        .WithMany("user")
                        .HasForeignKey("roleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("role");
                });

            modelBuilder.Entity("AS_SRS_LMS.Models.Class", b =>
                {
                    b.Navigation("users");
                });

            modelBuilder.Entity("AS_SRS_LMS.Models.Role", b =>
                {
                    b.Navigation("user");
                });

            modelBuilder.Entity("AS_SRS_LMS.Models.Subject", b =>
                {
                    b.Navigation("Class");

                    b.Navigation("Exam")
                        .IsRequired();

                    b.Navigation("documents");

                    b.Navigation("questions");

                    b.Navigation("schedules");
                });

            modelBuilder.Entity("AS_SRS_LMS.Models.TypeExam", b =>
                {
                    b.Navigation("exam");
                });
#pragma warning restore 612, 618
        }
    }
}
